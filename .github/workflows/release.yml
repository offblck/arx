name: Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact: arx-linux
            binary: arx
          - os: macos-latest
            artifact: arx-macos
            binary: arx
          - os: windows-latest
            artifact: arx-windows.exe
            binary: arx.exe

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --release
      - run: mv target/release/${{ matrix.binary }} target/release/${{ matrix.artifact }}
        shell: bash {0}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: target/release/${{ matrix.artifact }}

  create-release:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
      - run: |
          for artifact in arx-linux arx-macos arx-windows.exe; do
            if [[ -f "artifacts/$artifact/$artifact" ]]; then
              curl -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @artifacts/$artifact/$artifact \
                ${{ steps.create_release.outputs.upload_url }}?name=$artifact
            fi
          done
